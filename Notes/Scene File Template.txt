// Note that comments like this are not allowed in valid scene files.

// Please see "reflections.txt" for a correct use of this template.

// The following six properties must be defined somewhere in every scene file.

eye x y z		// Floating-point numbers for the xyz-coordinates of the "eye" position.
viewdir x y z		// FLoating-point numbers for the xyz-magnitudes of the view direction vector.
updir x y z	        // FLoating-point numbers for the xyz-magnitudes of the "up" direction vector.
vfov °			// Floating-point number representing the vertical field of view in degrees.
imsize width height	// Integer values representing the height and width of the image in pixels.
bkgcolor r g b		// Floating-point values within the range 0-1 representing the rgb values of the background.

refraction r 		// This floating-point value is optional and represents the refraction index of the scene.

// Please note that scene vectors are automatically normalized for your convenience.

// Every object definition must be preceded by a material definition somewhere in the scene file.
mtlcolor r g b spec_r spec_g spec_b ambient diffuse specular n opacity refraction

// Uncommented ASCII .ppm files can be used to define textures. The path from "Source Code" to the file must be given.
// Note that any untextured objects must be defined before a texture is declared.
texture path

// Spheres require xyz-coordinate center values and a single radius value.
sphere x y z r

// Ellipsoids require xyz-coordinate center values and three xyz radius values.
ellipsoid x y z rx ry rz

// Triangle faces require at least three vertices to be defined first.
v x y z
v x y z
v x y z

// For smooth shading, vertex normal vectors can also be supplied...
vn x y z

// triangles with textures will require uv-coordinates in the range of 0-1.
vt u v

// Please note that all vertex, normal vector, and texture coordinate definitions are indexed starting at 1.

// A solid color triangle can be defined with only vertices.
f v1 v2 v3

// An untextured triangle with smooth shading is defined without texture coordinates.
f v1//n1 v2//n2 v3//n3

// A textured triangle without smooth shading is defined without vertex normal vectors.
f v1/t1 v2/t2 v3/t3

// A textured triangle with smooth shading requires all three types of indices.
f v1/t1/n1 v2/t2/n2 v3/t3/n3

// There are four light source types, each with their own requirements.

// The type of a standard light determines whether it is a directional or point light.
light x y z t r g b

// Spotlights require a direction vector and a spread angle. 
spotlight x y z xd yd zd ° r g b

// Attenuated lights and spotlights require three additional constants.
attlight x y z t r g b c1 c2 c3

attspotlight x y z xd yd zd ° r g b c1 c2 c3